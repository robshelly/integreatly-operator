#!/usr/bin/env bash

# This script extracts the most recent manifests from an image containing a manifests bundle and processes it into a version that works with this operator.
#
# Example:
#
#$ ./process-image-manifests registry-proxy.engineering.redhat.com/rh-osbs/3scale-amp2-3scale-rhel7-operator-metadata:1.11.0-2
#$ tree manifests/registry-proxy.engineering.redhat.com/rh-osbs/ -L 2
#manifests/registry-proxy.engineering.redhat.com/rh-osbs/
#└── 3scale-amp2-3scale-rhel7-operator-metadata:1.11.0-2
#    ├── 0.3.0
#    ├── 0.4.0
#    ├── 0.4.1
#    ├── 0.4.2
#    ├── 0.5.0
#    └── 3scale-operator.package.yaml

WORK_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
MANIFESTS_DIR=${WORK_DIR}/../manifests
TMP_DIR=${WORK_DIR}/../tmp
MANIFEST_TMP_DIR=${MANIFESTS_DIR}/$1

extract_brew_pkg_name() {
    BrewPkgName=$(oc image info $1 -o json | jq -r '.config.container_config.Labels."com.redhat.component"')
    containerUrl=$(oc image info $1 -o json | jq -r '.config.container_config.Labels.url')
    echo "Brew package name: '$BrewPkgName'"
    echo "Container URL: '$containerUrl'"
}

extract_manifests_from_image() {
    mkdir -p ${MANIFEST_TMP_DIR}
    echo "Extracting manifests from image '$1' to ${MANIFEST_TMP_DIR}"
    oc image extract $1 --path /manifests/:${MANIFEST_TMP_DIR} --confirm
    ls -la ${MANIFEST_TMP_DIR}
}

find_package_yaml() {
    find ${MANIFEST_TMP_DIR} -name "*.package.yaml"
}

process_image() {
   echo ""
   echo "Process Image '$1'"
   echo ""
   extract_brew_pkg_name $1
   extract_manifests_from_image $1
   find_package_yaml
}

process_image $1
